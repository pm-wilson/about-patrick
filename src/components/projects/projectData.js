export const groupProjectData = [{
  project: 'AMAzine',
  repoLink: 'https://github.com/AMA-Zine',
  p1: 'Full stack Node, Python, React app that pulls data from various REST API\'s to create a web magazine.',
  p2: 'I was primarily responsible for building the endpoints on the back end, page layout with React and styling with CSS on the front end. I also helped my team with bugs and design challenges as they were encountered.',
  p3: 'The main challenge of this app was getting all the data we needed to display over to the back end on a daily basis so we could control how many times our API\'s were hit to avoid over use penalties.',
  deployLink: 'https://amazine-dev.netlify.app/',
  pictureSource: '../../../public/assets/pagepics/amazine.png',
  pictureAlt: 'Amazine Picture',
},
{
  project: 'Sherlock Stocks',
  repoLink: 'https://github.com/Sherlock-Stocks',
  p1: 'Full stack Node, React app that takes in parameters for a stock trading algorithm and shows results after a set time period with individual user accounts.',
  p2: 'I was responsible for the initial setup of the back end including data modeling and SQL table creation and initial wiring and testing of the controllers. I also played a lead role in designing the algorithm.',
  p3: 'This project taught me how to resolve and prevent Git merge conflicts.',
  deployLink: 'https://sherlockstocks.netlify.app/',
  pictureSource: '../../../public/assets/pagepics/sherlockstocks.png',
  pictureAlt: 'Sherlock Stocks Picture',
},
{
  project: 'Truly Trivial',
  repoLink: 'https://github.com/Truly-Trivial',
  p1: 'Front end React app featuring a trivia game with user accounts',
  p2: 'I was responsible for creating custom CSS animations and helping the team with JavaScript logic.',
  p3: 'This app taught me how to create a secure user log in experience.',
  deployLink: 'https://fervent-agnesi-b2491a.netlify.app/',
  pictureSource: '../../../public/assets/pagepics/trulytrivial.png',
  pictureAlt: 'Truly Trivial Picture',
},
{
  project: 'Cosmic Checkers',
  repoLink: 'https://github.com/Cosmic-Checkers',
  p1: 'Front end vanilla JS app that manages a two player game of checkers and tracks wins and losses.',
  p2: 'I played a lead role in designing the game engine and user interface.',
  p3: 'This app taught me the importance of testing code as you go to avoid larger issues later.',
  deployLink: 'https://cosmic-checkers.github.io/Cosmic-Checkers/',
  pictureSource: '../../../public/assets/pagepics/cosmiccheckers.png',
  pictureAlt: 'Cosmic Checkers Picture',
}];

export const soloProjectData = [
  {
    project: 'World Domination',
    repoLink: 'https://github.com/pm-wilson/solo-world-domination',
    p1: 'Self taught front end vanilla JS app that combines the board game Risk with the card game Magic the Gathering. You don\'t need to understand either to click through the game.',
    p2: 'This app features a fully interactive game map dynamically built with data stored in a config variable, related data relationships used to minimize repeated data and speed up search times, and an options page that toggles features on and off independently.',
    p3: 'Developing this app was the first project in my development career and taught me the foundations of everything I know in vanilla JS. I learned how to debug complex issues, how to organize variables and manage state. I also learned how to move data from the clipboard into a web page, interact with the DOM dynamically and use Bootstrap for styling.',
    deployLink: 'https://pm-wilson.github.io/solo-world-domination/',
    pictureSource: '../../../public/assets/pagepics/worlddomination.png',
    pictureAlt: 'World Domination Picture',
  },
  {
    project: 'Tic Tac Toe',
    repoLink: 'https://github.com/pm-wilson/solo-tic-tac-toe',
    p1: 'Self taught front end vanilla JS app that features an unbeatable single player tic tac toe game built.',
    p2: 'This app includes an algorithm that rotates and mirrors the board to look for a matching game pattern to avoid moves that would otherwise make it lose. By building it in this way I was able to save thousands of lines of code and tedious instances that could introduce errors when programming the unbeatable version you see here.',
    p3: 'Hint, to roll the game back to a beatable version, run this in the console "gameVars.difficulty=0"',
    deployLink: 'https://pm-wilson.github.io/solo-tic-tac-toe/',
    pictureSource: '../../../public/assets/pagepics/tictactoe.png',
    pictureAlt: 'Tic Tac Toe Picture',
  }];
